import os
from tornado import ioloop,web
from tornado.escape import json_encode
from pymongo import MongoClient
import json
from bson import json_util
from bson.objectid import ObjectId

"""
MONGODB_DB_URL = os.environ.get('OPENSHIFT_MONGODB_DB_URL') if os.environ.get('OPENSHIFT_MONGODB_DB_URL') else 'mongodb://localhost:27017/'
MONGODB_DB_NAME = os.environ.get('OPENSHIFT_APP_NAME') if os.environ.get('OPENSHIFT_APP_NAME') else 'getbookmarks'

client = MongoClient(MONGODB_DB_URL)
db = client[MONGODB_DB_NAME]
"""
class IndexHandler(web.RequestHandler):
	def get(self):
		#print repr(self.request) #cliet req ip log
		#conn = pymongo.Connection("mongodb://rmkrjy:googleyahoo@widmore.mongohq.com:10010/tododb")
		#conn = pymongo.Connection("localhost", 27017)
		#db=conn['tododb']
		#collection=db['todocol']
		books=db.todocol.find()
		self.render('usertodolist.htm',books = books)#manikantan change template here

class DatabaseHandler(web.RequestHandler):
	def post(self):
		text=self.get_argument('additem')
		if(text!=''):
			#conn = pymongo.Connection("mongodb://rmkrjy:googleyahoo@widmore.mongohq.com:10010/tododb")
			#conn = pymongo.Connection("localhost", 27017)
			#db=conn['tododb']
			#collection=db['todocol']
			db.todocol.insert({"text":text})
		
		
class DeleteDocDatabaseHandler(web.RequestHandler):
	def post(self):
		deleteitem=self.get_argument('deletetodo')
		#conn = pymongo.Connection("mongodb://rmkrjy:googleyahoo@widmore.mongohq.com:10010/tododb")
		#conn = pymongo.Connection("localhost", 27017)
		#db=conn['tododb']
		#collection=db['todocol']
		db.todocol.remove({"text":deleteitem})



settings = {
    "template_path": os.path.join(os.path.dirname(__file__), "templates"),
    "static_path": os.path.join(os.path.dirname(__file__), "static"),
    "debug" : True
}

application = web.Application([
	(r'/', IndexHandler),
	(r'/index', IndexHandler),
	(r'/api/v1/stories',StoriesHandler),
	(r'/api/v1/stories/(.*)', StoryHandler)
],**settings)

if __name__ == "__main__":
	application.listen(8888)
	ioloop.IOLoop.instance().start()
